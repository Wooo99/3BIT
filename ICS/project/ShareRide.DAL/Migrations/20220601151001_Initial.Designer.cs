// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareRide.DAL;

#nullable disable

namespace ShareRide.DAL.Migrations
{
    [DbContext(typeof(ShareRideDbContext))]
    [Migration("20220601151001_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShareRide.DAL.Entities.AddressEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RideId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RideId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f5cf253-b20b-4f69-b0ae-4966680924c6"),
                            City = "Brno",
                            Country = "Czech",
                            Street = "Kolejni 5",
                            ZIP = "61600"
                        },
                        new
                        {
                            Id = new Guid("af0b0165-633c-44e4-90b2-7fc07b292743"),
                            City = "Olomouc",
                            Country = "Czech",
                            Street = "Neredin 2",
                            ZIP = "779 00"
                        });
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.CarEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CarType")
                        .HasColumnType("int");

                    b.Property<int>("Manufacturer")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PassengerSeats")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerGuid");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd2a594e-f484-45d8-81e9-e9a4cc665938"),
                            CarType = 2,
                            Manufacturer = 48,
                            Name = "test name",
                            OwnerGuid = new Guid("f390282b-2fd9-488d-9397-9d715b6188bb"),
                            PassengerSeats = 4,
                            RegistrationYear = 2000
                        });
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.RideEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DriverGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EstimatedEndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StartGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DestinationGuid");

                    b.HasIndex("DriverGuid");

                    b.HasIndex("StartGuid");

                    b.ToTable("Rides");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54753733-ff8e-47fb-befd-c36f549f31ae"),
                            CarId = new Guid("bd2a594e-f484-45d8-81e9-e9a4cc665938"),
                            DestinationGuid = new Guid("af0b0165-633c-44e4-90b2-7fc07b292743"),
                            DriverGuid = new Guid("f390282b-2fd9-488d-9397-9d715b6188bb"),
                            EstimatedEndTime = new DateTime(2022, 4, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StartGuid = new Guid("7f5cf253-b20b-4f69-b0ae-4966680924c6"),
                            StartTime = new DateTime(2022, 4, 10, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RideEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RideEntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f390282b-2fd9-488d-9397-9d715b6188bb"),
                            FirstName = "Adam",
                            LastName = "Kovacik"
                        });
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.AddressEntity", b =>
                {
                    b.HasOne("ShareRide.DAL.Entities.RideEntity", "Ride")
                        .WithMany()
                        .HasForeignKey("RideId");

                    b.Navigation("Ride");
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.CarEntity", b =>
                {
                    b.HasOne("ShareRide.DAL.Entities.UserEntity", "Owner")
                        .WithMany("OwnedCars")
                        .HasForeignKey("OwnerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.RideEntity", b =>
                {
                    b.HasOne("ShareRide.DAL.Entities.CarEntity", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("ShareRide.DAL.Entities.AddressEntity", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationGuid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ShareRide.DAL.Entities.UserEntity", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverGuid");

                    b.HasOne("ShareRide.DAL.Entities.AddressEntity", "Start")
                        .WithMany()
                        .HasForeignKey("StartGuid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Car");

                    b.Navigation("Destination");

                    b.Navigation("Driver");

                    b.Navigation("Start");
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.UserEntity", b =>
                {
                    b.HasOne("ShareRide.DAL.Entities.RideEntity", null)
                        .WithMany("Passengers")
                        .HasForeignKey("RideEntityId");
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.RideEntity", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("ShareRide.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("OwnedCars");
                });
#pragma warning restore 612, 618
        }
    }
}
